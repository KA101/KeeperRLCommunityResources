
Def Fp_AncientShrine() {
  Building("fp_mud", "ruin_wall")
  Border(BOTTOM, 2,
    Border(TOP, 1,
      Position(
        MIDDLE,
        {3 1},
        {
          Reset("fp_mud")
          Margin(LEFT, 1,
            Set("torch", "no_corpse"),
            Border(RIGHT, 1,
              Set("torch", "no_corpse"))
          )
        }
      )
    )
  )
  Border(BOTTOM, 1,
    Position(MIDDLE, {1 1}, Reset("fp_mud", "fp_mud")))
  Inside(TOP, 1,
    Border(TOP, 1,
      Position(MIDDLE, {1 1}, Reset("fp_mud"))))
  Inside(1, Place({1 1}, Set("fp_skeleton", "fp_mud"), {2 4}, Not On("no_corpse")))
  Inside(1, Place({1 1}, Set("fp_mud", "fp_mud"), {6 12}, And(Not On("no_corpse"),Not On("fp_skeleton"))))
  Inside(TOP, 1,
    Border(TOP, 1,
      Position(MIDDLE, {1 1}, Set("old_altar", "no_corpse")))
  )
}
End

"fp_ancientshrine" Fp_AncientShrine()

Def Crater() {
  Position(
    position = MIDDLE,
    size = {2 4}
    generator = {Building("hill", "hill")}
	)
  Position(
    position = MIDDLE,
    size = {4 2}
    generator = {Building("hill", "hill")}
	)
  Position(
    position = MIDDLE,
    size = {2 1}
    generator = {Building("cs_hill", "cs_hill")}
	)
  Position(
    position = MIDDLE,
    size = {1 2}
    generator = {Building("cs_hill", "cs_hill")}
	)
  Position(
    position = MIDDLE,
    size = {1 1}
    generator = {Building("cs_hill_crystal", "cs_hill_crystal")}
	)
}
End

Def CraterBig() {
  Position(
    position = MIDDLE,
    size = {5 2}
    generator = {Building("hill", "hill")}
	)
  Position(
    position = MIDDLE,
    size = {2 5}
    generator = {Building("hill", "hill")}
	)
  Position(
    position = MIDDLE,
    size = {4 3}
    generator = {Building("hill", "hill")}
	)
  Position(
    position = MIDDLE,
    size = {3 4}
    generator = {Building("hill", "hill")}
	)
  Position(
    position = MIDDLE,
    size = {4 1}
    generator = {Building("cs_hill", "cs_hill")}
	)
  Position(
    position = MIDDLE,
    size = {1 4}
    generator = {Building("cs_hill", "cs_hill")}
	)
  Position(
    position = MIDDLE,
    size = {3 2}
    generator = {Building("cs_hill", "cs_hill")}
	)
  Position(
    position = MIDDLE,
    size = {2 3}
    generator = {Building("cs_hill", "cs_hill")}
	)
  Position(
    position = MIDDLE,
    size = {2 2}
    generator = {Building("cs_hill_crystal", "cs_hill_crystal")}
	)
  Position(
    position = MIDDLE,
    size = {3 1}
    generator = {Building("cs_hill_crystal", "cs_hill_crystal")}
	)
  Position(
    position = MIDDLE,
    size = {1 3}
    generator = {Building("cs_hill_crystal", "cs_hill_crystal")}
	)
}
End

"PlaceCrater" Choose(
   Crater() 
)

"PlaceCraterBig" Choose(
   CraterBig() 
)

Def WorldMapGore() {
  NoiseMap(0.4, {
    (0.01, 0.8, Filter(And(Not On("water_area"), Not On("set_sand"), Not On("set_mountains"), Not On("set_snow"), Or(On("set_tree"))), Set("set_gore")))
  })
  
  Filter(On("set_gore"), {Remove("FOREST") Set("Cult_Forest_Growth") Choose(Set("eg_map_gore_1"), Set("eg_map_gore_2"), Set("eg_map_gore_3"))})}
End

Def WorldMapCultForest() {
  NoiseMap(0.4, {
    (0.01, 0.8, Filter(And(Not On("set_gore"), Not On("water_area"), Not On("set_sand"), Not On("set_mountains"), Not On("set_snow"), Or(On("set_tree"))), Set("set_cult")))
  })
  
  Filter(On("set_cult"), {Remove("FOREST") Set("Cult_Forest") Choose(Set("eg_map_gore_tree_1"), Set("eg_map_gore_tree_2"), Set("eg_map_gore_tree_3"))})}
End

Def WorldMapCultGrass() {
  NoiseMap(0.4, {
    (0.01, 0.8, Filter(And(Not On("water_area"), Not On("set_sand"), Not On("set_tree"), Not On("set_mountains"), Not On("set_snow"), Or(On("set_grass"))), Set("set_cult_grass")))
  })
  
  Filter(On("set_cult_grass"), {Remove("GRASSLAND") Set("FTD_GREAT_LAKE") Choose(Set("eg_map_lake_1"), Set("eg_map_lake_2"), Set("eg_map_lake_3"))})}
End

Def WorldMapCultMountain() {
  NoiseMap(0.4, {
    (0.01, 0.8, Filter(And(Not On("water_area"), Not On("set_sand"), Not On("set_tree"), Not On("set_snow"), Or(On("set_mountains"))), Set("set_cult_mountains")))
  })
  
  Filter(On("set_cult_mountains"), {Remove("MOUNTAIN") Set("CS_MOUNTAIN") Choose(Set("cs_crystal_map"), Set("cs_crystal_map"), Set("cs_crystal_map"))})}
End

Def WorldMapCultYS() {
  NoiseMap(0.2, {
    (0.01, 0.6, Filter(And(Not On("set_cult_grass"), Not On("water_area"), Not On("set_sand"), Not On("set_tree"), Not On("set_mountains"), Not On("set_snow"), Or(On("set_grass"))), Set("set_cult_ys")))
  })
  
  Filter(On("set_cult_ys"), {Remove("GRASSLAND") Set("YS_GRASSLAND") })}
End

"world_map" modify {
  NoiseMap(0.65, {
    (0.8, 1.0, Reset("set_water"))
    (0.74, 0.8, Reset("set_sand"))
    (0.2, 0.74, Reset("set_grass"))
    (0.0, 0.2, Reset("set_mountains"))
    #(0.0, 0.02, Set("set_lava"))
  })
  #Position(MIDDLE, {1 1}, FloodFill(Or(On("sand"), On("grass"), On("water")), Set("save")))
  #Filter(Not On("save"), Reset("mountain"))
  #Border(1, Filter(Not On("mountain"), Fail))
  CellularAutomaton(Filter(Not On("set_mountains"), Reset("set_water")), 0.35)
  Inside(TOP, 18, Inside(BOTTOM, 18, CellularAutomaton(Set("water_area"), 0.75)))
  SplitV(0.5,
    Filter(And(Not On("water_area"), Or(On("set_water"), On("set_sand"))), Reset("set_snow")),
    Filter(And(Not On("water_area"), Or(On("set_water"), On("set_sand"))), Reset("set_sand"))
  )
  Filter(And(On("set_sand"), On("water_area")), Reset("set_swamp"))
  NoiseMap(0.65, {
    (0.0, 0.2, Filter(On("set_snow"), Set("set_mountains_snow")))
  })
  WorldMapFeatures()
  WorldMapConnections()
  WorldMapTrees()
  WorldMapGore()
  WorldMapCultForest()
  WorldMapCultGrass()
  WorldMapCultMountain()
  WorldMapCultYS()
}

"world_map_test" modify {
  NoiseMap(0.65, {
    (0.8, 1.0, Reset("set_water"))
    (0.74, 0.8, Reset("set_sand"))
    (0.2, 0.74, Reset("set_grass"))
    (0.0, 0.2, Reset("set_mountains"))
    #(0.0, 0.02, Set("set_lava"))
  })
  #Position(MIDDLE, {1 1}, FloodFill(Or(On("sand"), On("grass"), On("water")), Set("save")))
  #Filter(Not On("save"), Reset("mountain"))
  #Border(1, Filter(Not On("mountain"), Fail))
  CellularAutomaton(Filter(Not On("set_mountains"), Reset("set_water")), 0.35)
  SplitV(0.7, Filter(On("set_sand"), Reset("set_swamp")), Filter(On("set_water"), Reset("set_sand")))
  SplitV(0.3, Filter(Or(On("set_water"), On("set_sand")), Reset("set_snow")), {})
  NoiseMap(0.65, {
    (0.0, 0.2, Filter(On("set_snow"), Set("set_mountains_snow")))
  })
  CellularAutomaton(Set("continent"), 0.5)
  Filter(Not On("continent"), Reset("set_water"))
  WorldMapFeatures()
  WorldMapConnections()
  WorldMapTrees()
  WorldMapGore()
  WorldMapCultForest()
  WorldMapCultGrass()
  WorldMapCultMountain()
  WorldMapCultYS()
}